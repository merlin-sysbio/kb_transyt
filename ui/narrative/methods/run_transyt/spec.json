{
    "ver": "0.0.1",
    "authors": [
        "filipeliu"
    ],
    "contact": "fliu@anl.gov",
    "categories": ["active", "metabolic_modeling"],
    "widgets": {
        "input": null,
        "output": "kbaseTabTable"
    },
    "parameters": [ 
        {
            "id": "genome_id",
            "optional": false,
            "advanced": false,
            "allow_multiple": false,
            "default_values": [ "" ],
            "field_type": "text",
            "text_options": {
                "valid_ws_types": [ "KBaseGenomes.Genome" ]
            }
        },
        {
            "id": "model_id",
            "optional": true,
            "advanced": false,
            "allow_multiple": false,
            "default_values": [ "" ],
            "field_type": "text",
            "text_options": {
                "valid_ws_types": [ "KBaseFBA.FBAModel" ]
            }
        },
        {
            "id": "auto_accept_evalue",
            "optional": false,
            "advanced": true,
            "allow_multiple": false,
            "default_values": [ "1E-50" ],
            "field_type": "text"
        },
        {
            "id": "override_ontologies_filter",
            "optional": false,
            "advanced": true,
            "checkbox_options" : {
                "unchecked_value" : 0,
                "checked_value" : 1
            },
            "allow_multiple": false,
            "default_values": [ "0" ],
            "field_type": "checkbox"
        },
        {
            "id": "blast_evalue_threshold",
            "optional": false,
            "advanced": true,
            "allow_multiple": false,
            "default_values": [ "1" ],
            "field_type": "text"
        },
        {
            "id": "bitscore_threshold",
            "optional": false,
            "advanced": true,
            "allow_multiple": false,
            "default_values": [ "50" ],
            "field_type": "text"
        },
        {
            "id": "query_coverage_threshold",
            "optional": false,
            "advanced": true,
            "allow_multiple": false,
            "default_values": [ "0.8" ],
            "field_type": "text",
            "text_options" : {
                "valid_ws_types": [],
                "validate_as": "float",
                "min_float": 0,
                "max_float": 1
            }
        },
        {
            "id": "similarity_score",
            "optional": false,
            "advanced": true,
            "allow_multiple": false,
            "default_values": [ "0.3" ],
            "field_type": "text",
            "text_options" : {
                "valid_ws_types": [],
                "validate_as": "float",
                "min_float": 0,
                "max_float": 1
            }
        },
        {
            "id": "alpha",
            "optional": false,
            "advanced": true,
            "allow_multiple": false,
            "default_values": [ "0.8" ],
            "field_type": "text",
            "text_options" : {
                "valid_ws_types": [],
                "validate_as": "float",
                "min_float": 0,
                "max_float": 1
            }
        },
        {
            "id": "beta",
            "optional": false,
            "advanced": true,
            "allow_multiple": false,
            "default_values": [ "0.3" ],
            "field_type": "text",
            "text_options" : {
                "valid_ws_types": [],
                "validate_as": "float",
                "min_float": 0,
                "max_float": 1
            }
        },
        {
            "id": "minimum_hits_penalty",
            "optional": false,
            "advanced": true,
            "allow_multiple": false,
            "default_values": [ "2" ],
            "field_type": "text"
        },
        {
            "id": "score_threshold",
            "optional": false,
            "advanced": true,
            "allow_multiple": false,
            "default_values": [ "0.5" ],
            "field_type": "text",
            "text_options" : {
                "valid_ws_types": [],
                "validate_as": "float",
                "min_float": 0,
                "max_float": 1
            }
        },
        {
            "id": "alpha_families",
            "optional": false,
            "advanced": true,
            "allow_multiple": false,
            "default_values": [ "0.4" ],
            "field_type": "text",
            "text_options" : {
                "valid_ws_types": [],
                "validate_as": "float",
                "min_float": 0,
                "max_float": 1
            }
        }
    ],
    "behavior": {
        "service-mapping": {
            "url": "",
            "name": "kb_transyt",
            "method": "run_transyt",
            "input_mapping": [
                {
                    "narrative_system_variable": "workspace",
                    "target_property": "workspace_name"
                },{
                    "narrative_system_variable": "workspace_id",
                    "target_property": "workspace_id"
                },{
                    "input_parameter": "genome_id",
                    "target_property": "genome_id"
                },{
                    "input_parameter": "model_id",
                    "target_property": "model_id"
                }
            ],
            "output_mapping": [
                {
                    "service_method_output_path": [0,"report_name"],
                    "target_property": "report_name"
                },{
                    "service_method_output_path": [0,"report_ref"],
                    "target_property": "report_ref"
                },{
                    "target_property" : "ws",
                    "narrative_system_variable" : "workspace"
                },{
                    "constant_value" : "KBaseFBA.FBAModel",
                    "target_property" : "type"
                },{
                    "target_property" : "obj",
                    "service_method_output_path": [0, "fbamodel_id"]
                }
            ]
        }
    },
    "job_id_output_field": "docker"
}
